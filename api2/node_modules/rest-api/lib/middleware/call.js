var _ = require('underscore');
var domain = require('domain');

module.exports = function call(api) {

  return function(req, res, next) {

    var $ = api.handles;
    $['api'] = api;
    $['req'] = req;
    $['res'] = res;


    $['params'] = req.api.params;

    $['render'] = function(content) {
      
      // @todo render can only be called once for each request!
      if(res.api['isRendered']) return; // next(new Error('response has already been rendered'));
      res.api['isRendered'] = true;

      res.api.content = content;
      next();
    };

    $['error'] =function(status, message) {
      next(new ClientError({status: status, message: message}));
    };

    $['internalError'] = function(message) {
      if(message instanceof Error) {
        next(message);
      } else if(_.isString(message)) {
        next(new Error(message));
      } else {
        throw new Error('$.internalError(message) accepts Error or string only');
      }
    };

    // finally call the controller method
    try {
      // console.log(_.flatten([$, _.values(req.api.params.url)]));
      req.api.controller.function.apply(null, _.flatten([$, _.values(req.api.request.params.url)]));
    }
    catch(e) {
      throw e; // internal server error, will send http 500
    }

  }
}