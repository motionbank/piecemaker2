var _ = require('underscore');
var async = require('async');
var domain = require('domain');

// @todo hack until this becomes available in official repo
// see:
// https://github.com/caolan/async/pull/231
// https://github.com/caolan/async/issues/208
// https://github.com/caolan/async/commit/f4dbaf601b1fc6f9436d200ef716dc5a47870423#commitcomment-2775064
async._applyEachSeries = function (fns /*args...*/) {
    var go = function () {
        var that = this;
        var args = Array.prototype.slice.call(arguments);
        var callback = args.pop();
        return async.eachSeries(fns, function (fn, cb) {
            fn.apply(that, args.concat([cb]));
        },
        callback);
    };
    if (arguments.length > 1) {
        var args = Array.prototype.slice.call(arguments, 1);
        return go.apply(this, args);
    }
    else {
        return go;
    }
};


module.exports = function hook(api, where) {

  return function(req, res, next) {

    if(_.has(api.hooks, where)) {
      // make sure wildcard funcs are always run
      // run *s at first
      req.api.controller.options.unshift('*'); 

      // do we have some hooks?
      var hookQueue = [];
      for(var i=0; i < req.api.controller.options.length; i++) {
        if(_.has(api.hooks[where], req.api.controller.options[i])) {
          hookQueue.push(api.hooks[where][req.api.controller.options[i]]);
        }
      }

      // remove * again
      req.api.controller.options.shift();

      if(hookQueue.length > 0) {
      
        // more information on domains, see http://nodejs.org/api/domain.html#domain_domain
        var hookDomain = domain.create();
        hookDomain.on('error', function(err) {
          hookDomain.dispose();
          return next(err); // awesome, because throwing the error here would crash the api
        });

        // execute hook funcs
        hookDomain.run(function() {
          async._applyEachSeries(_.flatten(hookQueue), api, req, res, function(err) {
            hookDomain.dispose();
            return next();
          });
        });
      }
    } else {
      // continue ... no hooks found
      return next();
    }
  }

}